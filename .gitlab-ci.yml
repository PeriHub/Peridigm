variables: &globals
  GIT_STRATEGY: clone
  GIT_SSL_CAINFO: /etc/ssl/certs/ca-certificates.crt
  DOCKER_DRIVER: overlay2
  DOCKER_LANG: en_US.UTF-8
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_VERIFY: 1
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  DOCKER_AUTH_CONFIG: '{ "auths": { "$CI_REGISTRY": { "auth": "$GIT_AUTH" }, "https://index.docker.io/v1/": { "auth": "$DOCKER_AUTH" }}}'
  FF_ENABLE_BASH_EXIT_CODE_CHECK: 1

stages:
  - build
  - deploy

build_job:
  only:
    - tags
  allow_failure: true
  stage: build
  variables:
    CI_REGISTRY_PATH: "registry.gitlab-test.dlr.de/hess_ja/images/"
  image: docker
  # Add to get Docker-in-Docker capabilities
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build -t ${CI_REGISTRY_PATH}peridigm_image .
    - docker push ${CI_REGISTRY_PATH}peridigm_image
    - docker run ${CI_REGISTRY_PATH}peridigm_image /opt/cmake/bin/ctest -T Test --test-dir /peridigm/build || true
    - CONTAINERNAME=$(docker ps -a --format "{{.Names}}")
    - docker cp $CONTAINERNAME:/peridigm/build/Testing Testing
  after_script:
    - docker logout
  artifacts:
    paths:
      - Testing
    expire_in: 1 day

deploy_job:
  only:
    - tags
  stage: deploy
  script:
    # - cd $CI_PROJECT_DIR/
    - apk add libxslt
    - ls
    - xsltproc $CI_PROJECT_DIR/scripts/CTest2JUnit.xsl Testing/`head -n 1 < Testing/TAG`/Test.xml > JUnitTestResults.xml
  artifacts:
    when: always
    reports:
      junit: JUnitTestResults.xml
  dependencies:
    - build_job
